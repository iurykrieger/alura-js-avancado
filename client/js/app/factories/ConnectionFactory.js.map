{"version":3,"sources":["../../app-es6/factories/ConnectionFactory.js"],"names":["ConnectionFactory","stores","version","dbname","connection","close","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStores","e","target","result","onsuccess","bind","onerror","error","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;AAAA,IAAIA,oBAAqB,YAAW;AACnC,KAAIC,SAAS,CAAC,aAAD,CAAb;AACA,KAAIC,UAAU,CAAd;AACA,KAAIC,SAAS,YAAb;AACA,KAAIC,UAAJ;AACA,KAAIC,KAAJ;;AALmC,KAO7BL,iBAP6B;AAQlC,+BAAc;AAAA;;AACb,SAAM,IAAIM,KAAJ,CAAU,+CAAV,CAAN;AACA;;AAViC;AAAA;AAAA,mCAYX;AACtB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,SAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBV,MAAtB,EAA8BD,OAA9B,CAAlB;AACAQ,iBAAYI,eAAZ,GAA8B;AAAA,aAAKd,kBAAkBe,aAAlB,CAAgCC,EAAEC,MAAF,CAASC,MAAzC,CAAL;AAAA,MAA9B;AACAR,iBAAYS,SAAZ,GAAwB,aAAK;AAC5B,UAAI,CAACf,UAAL,EAAiB;AAChBA,oBAAaY,EAAEC,MAAF,CAASC,MAAtB;AACAb,eAAQD,WAAWC,KAAX,CAAiBe,IAAjB,CAAsBhB,UAAtB,CAAR;AACAA,kBAAWC,KAAX,GAAmB,YAAW;AAC7B,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACA,QAFD;AAGA;AACDE,cAAQJ,UAAR;AACA,MATD;AAUAM,iBAAYW,OAAZ,GAAsB;AAAA,aAAKZ,OAAOO,EAAEC,MAAF,CAASK,KAAhB,CAAL;AAAA,MAAtB;AACA,KAdM,CAAP;AAeA;AA5BiC;AAAA;AAAA,qCA8BT;AACxB,QAAIlB,UAAJ,EAAgB;AACfC;AACAD,kBAAa,IAAb;AACA;AACD;AAnCiC;AAAA;AAAA,iCAqCbA,UArCa,EAqCD;AAChCH,WAAOsB,OAAP,CAAe,iBAAS;AACvB,SAAInB,WAAWoB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAJ,EAAiD;AAChDtB,iBAAWuB,iBAAX,CAA6BD,KAA7B;AACA;AACDtB,gBAAWwB,iBAAX,CAA6BF,KAA7B,EAAoC,EAAEG,eAAe,IAAjB,EAApC;AACA,KALD;AAMA;AA5CiC;;AAAA;AAAA;;AA+CnC,QAAO7B,iBAAP;AACA,CAhDuB,EAAxB","file":"ConnectionFactory.js","sourcesContent":["var ConnectionFactory = (function() {\n\tvar stores = ['negociacoes'];\n\tvar version = 4;\n\tvar dbname = 'aluraframe';\n\tvar connection;\n\tvar close;\n\n\tclass ConnectionFactory {\n\t\tconstructor() {\n\t\t\tthrow new Error('Não é possível criar instâncias dessa classe.');\n\t\t}\n\n\t\tstatic getConnection() {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tlet openRequest = window.indexedDB.open(dbname, version);\n\t\t\t\topenRequest.onupgradeneeded = e => ConnectionFactory._createStores(e.target.result);\n\t\t\t\topenRequest.onsuccess = e => {\n\t\t\t\t\tif (!connection) {\n\t\t\t\t\t\tconnection = e.target.result;\n\t\t\t\t\t\tclose = connection.close.bind(connection);\n\t\t\t\t\t\tconnection.close = function() {\n\t\t\t\t\t\t\tthrow new Error('Are you insane?');\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tresolve(connection);\n\t\t\t\t};\n\t\t\t\topenRequest.onerror = e => reject(e.target.error);\n\t\t\t});\n\t\t}\n\n\t\tstatic closeConnection() {\n\t\t\tif (connection) {\n\t\t\t\tclose();\n\t\t\t\tconnection = null;\n\t\t\t}\n\t\t}\n\n\t\tstatic _createStores(connection) {\n\t\t\tstores.forEach(store => {\n\t\t\t\tif (connection.objectStoreNames.contains(store)) {\n\t\t\t\t\tconnection.deleteObjectStore(store);\n\t\t\t\t}\n\t\t\t\tconnection.createObjectStore(store, { autoIncrement: true });\n\t\t\t});\n\t\t}\n\t}\n\n\treturn ConnectionFactory;\n})();\n"]}